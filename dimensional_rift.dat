comments{
}
info{
rowcount:22
colcount:42
camerapos:Translation: X=933.825 Y=6065.929 Z=30.000 Rotation: P=44.999832 Y=-89.999977 R=0.000000 Scale X=1.000 Y=1.000 Z=1.000
biome:rock
creator:pepijn
spiderrate:10
spidermin:2
spidermax:4
version:2023-08-14-1
opencaves:19,2/13,1/
camerazoom:1700.0
}
tiles{
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,50,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,12,1,1,1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,50,112,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,26,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,26,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,101,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,101,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,50,38,38,50,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,101,38,38,101,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,12,1,1,12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,112,38,38,112,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,1,24,24,1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,50,38,38,50,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
}
height{
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}
resources{
crystals:
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
ore:
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
}
objectives{
}
buildings{
}
landslidefrequency{
}
lavaspread{
}
miners{
ID=1,Translation: X=1072.813 Y=6240.530 Z=223.608 Rotation: P=-0.313130 Y=1.096603 R=0.462652 Scale X=1.000 Y=1.000 Z=1.000,Drill/JobDriver/
ID=0,Translation: X=604.884 Y=6304.750 Z=128.427 Rotation: P=4.367673 Y=146.641022 R=5.246636 Scale X=1.000 Y=1.000 Z=1.000,Drill/JobDriver/
}
briefing{

}
briefingsuccess{

}
briefingfailure{

}
vehicles{
VehicleLMLC_C,Translation: X=795.927 Y=6189.318 Z=19.374 Rotation: P=4.367673 Y=146.640839 R=5.407053 Scale X=1.000 Y=1.000 Z=1.000,upgrades=UpAddNav/,driver=0,ID=1,Essential=true
VehicleGraniteGrinder_C,Translation: X=1040.722 Y=6238.065 Z=0.509 Rotation: P=-0.313137 Y=1.096617 R=0.463038 Scale X=1.000 Y=1.000 Z=1.000,upgrades=UpAddNav/,driver=1,ID=0,Essential=true
}
creatures{
}
blocks{
1/EventCallEvent:13,1,5.0,vehicleEnteredPortal
3/EventCallEvent:19,1,5.0,vehicleEnteredPortal
5/EventCallEvent:19,4,5.0,vehicleEnteredPortal
2/TriggerEnter:13,1,5.0,_,false,true
4/TriggerEnter:19,1,5.0,_,false,true
6/TriggerEnter:19,4,5.0,_,false,true
2-1
4-3
6-5
}
script{
# Dimensional Rift - Dynamic Map Swapping System
# Map dimensions: 22 rows x 42 columns
# Divided into two halves: left (cols 0-20) and right (cols 21-41)

# Primary map dimensions (only values to change for resizing)
int mapRows=22
int mapCols=42

# Derived variables (calculated in init)
int halfCols=0
int maxCols=0
int maxArrayIndex=0
int maxRowIndex=0
int rightColStart=0

# Arrays to store map halves - each array stores tiles for one half
intarray leftHalfTiles
intarray rightHalfTiles

# Utility variables for recursive copying operations
int currentRow=0
int currentCol=0
int arrayIndex=0

# Additional utility variables for swapping operations
int sourceRow=0
int sourceCol=0
int targetRow=0
int targetCol=0
int tempTileId=0
bool validTile=true
bool copyInProgress=false

# Generalized loop control variables
bool leftMap=true
bool leftArray=true

# Dimension tracking
bool inNormalDimension=true

# Task queue for sequential operations (enum values)
# 0 = done/no next task
# 1 = startArea
# 2 = readRightHalfToArray (init sequence)
int nextTask=0

# Vehicle variables
vehicle gg=0
vehicle lmlc=1

# Initialize all derived variables from mapRows and mapCols
init::;
halfCols=mapCols//2;
rightColStart=halfCols;
maxRowIndex=mapRows-1;
maxArrayIndex=mapRows*halfCols;
maxArrayIndex-=1;
nextTask=2;
readLeftHalfToArray;

readLeftHalfToArray::;
leftMap=true;
leftArray=true;
generalizedLoop;

readRightHalfToArray::;
leftMap=false;
leftArray=false;
generalizedLoop;

# Generalized loop for reading/writing map halves to/from arrays
generalizedLoop::;
((copyInProgress==false))initializeLoop;
((arrayIndex<=maxArrayIndex))[processArrayElement][completionHandler];

initializeLoop::;
currentRow=0;
arrayIndex=0;
copyInProgress=true;
((leftMap==true))currentCol=0;
((leftMap==false))currentCol=rightColStart;
((leftMap==true))maxCols=halfCols;
((leftMap==false))maxCols=mapCols;

processArrayElement::;
tempTileId=get(currentRow)(currentCol);
((tempTileId>100))tempTileId-=100;
((leftArray==true))leftHalfTiles[arrayIndex]=tempTileId;
((leftArray==false))rightHalfTiles[arrayIndex]=tempTileId;
validTile=true;
((tempTileId==lava))validTile=false;
((tempTileId==24))validTile=false;
((validTile==true))place:currentRow,currentCol,solid_rock;
incrementAndAdvance;

incrementAndAdvance::;
arrayIndex+=1;
currentCol+=1;
((currentCol>=maxCols))resetColAndAdvanceRow;
wait:0.0;
generalizedLoop;

resetColAndAdvanceRow::;
((leftMap==true))currentCol=0;
((leftMap==false))currentCol=rightColStart;
((currentRow<maxRowIndex))currentRow+=1;

completionHandler::;
copyInProgress=false;
((nextTask==2))readRightHalfToArray;
((nextTask==1))startArea;
nextTask-=1;

startArea::;
leftArray=true;
read=false;
floodfill;

# flood fill algorithm

# flood fill variables
intarray fillTileRows
intarray fillTileCols
int taskidx=0
bool read=true

floodfill::;
fillTileRows[taskidx]=gg.row;
fillTileCols[taskidx]=gg.col;
taskidx+=1;
fillTileRows[taskidx]=lmlc.row;
fillTileCols[taskidx]=lmlc.col;
taskidx+=1;
doFloodFill;

doFloodFill::;
taskidx-=1;
currentRow=fillTileRows[taskidx];
currentCol=fillTileCols[taskidx];
currentRow-=1;
considerTile;
currentCol+=1;
considerTile;
currentRow+=1;
considerTile;
currentRow+=1;
considerTile;
currentCol-=1;
considerTile;
currentCol-=1;
considerTile;
currentRow-=1;
considerTile;
currentRow-=1;
considerTile;
wait:0.0;
((taskidx>0))[doFloodFill][completeFill];

completeFill::;
((read==false))return;
read=false;
leftArray=leftArray==false;
wait:0.0;
floodfill;

considerTile::;
((currentRow<0))return;
((currentCol<0))return;
((currentCol>=mapCols))return;
((currentRow>=mapRows))return;
tempTileId=get(currentRow)(currentCol);
#((tempTileId==12))return;
arrayIndex=currentRow*halfCols;
arrayIndex+=currentCol;
((read==true))[readMode][writeMode];

readMode::;
((leftArray==true))[checkReadLeft][checkReadRight];

writeMode::;
((leftArray==true))[checkWriteLeft][checkWriteRight];

checkReadLeft::;
((tempTileId==solid_rock))return;
leftHalfTiles[arrayIndex]=tempTileId;
tempTileId=solid_rock;
fillTile;

checkReadRight::;
((tempTileId==solid_rock))return;
rightHalfTiles[arrayIndex]=tempTileId;
tempTileId=solid_rock;
fillTile;

checkWriteLeft::;
((leftHalfTiles[arrayIndex]==tempTileId))return;
tempTileId=leftHalfTiles[arrayIndex];
fillTile;

checkWriteRight::;
((rightHalfTiles[arrayIndex]==tempTileId))return;
tempTileId=rightHalfTiles[arrayIndex];
fillTile;

fillTile::;
place:currentRow,currentCol,tempTileId;
fillTileRows[taskidx]=currentRow;
fillTileCols[taskidx]=currentCol;
taskidx+=1;

# Swap dimensions of the left map area
swapDimensions::;
((inNormalDimension==true))[switchToAlternateDimension][switchToNormalDimension];

switchToAlternateDimension::;
inNormalDimension=false;
read=true;
leftArray=true;
floodfill;

switchToNormalDimension::;
inNormalDimension=true;
read=true;
leftArray=false;
floodfill;

# Design utility: Copy slimy slug holes (portals) from left to right half
copyPortals::;
halfCols=mapCols//2;
currentRow=0;
currentCol=0;
copyPortalsLoop;

copyPortalsLoop::;
wait:0.0;
((currentRow<mapRows))processPortalTile;

processPortalTile::;
tempTileId=get(currentRow)(currentCol);
targetCol=currentCol+halfCols;
((tempTileId==12))place:currentRow,targetCol,12;
tempTileId=get(currentRow)(targetCol);
((tempTileId==12))place:currentRow,currentCol,12;
incrementPortalPosition;

incrementPortalPosition::;
currentCol+=1;
((currentCol>=halfCols))advancePortalRow;
((currentCol<halfCols))copyPortalsLoop;

advancePortalRow::;
currentCol=0;
currentRow+=1;
copyPortalsLoop;

# Portal activation system - called by trigger blocks with cooldown
# Uses lastvehicle to avoid race condition where enter triggers before row/col update
vehicleEnteredPortal::;
((lastvehicle.id==gg.id))checkLmlcOnPortal;
((lastvehicle.id==lmlc.id))checkGgOnPortal;

checkLmlcOnPortal::;
tempTileId=get(lmlc.row)(lmlc.col);
((tempTileId==12))[activatePortal][msg:"First vehicle on portal - bring the second!"];

checkGgOnPortal::;
tempTileId=get(gg.row)(gg.col);
((tempTileId==12))[activatePortal][msg:"First vehicle on portal - bring the second!"];

activatePortal::;
msg:"Portal activated! Dimension shifting...";
wait:0.5;
swapDimensions;

}
